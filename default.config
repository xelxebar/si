# MIT License
# 
# Copyright (c) 2016 Brandon Wilson
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


readonly regex_special="][\`_^{|}"
readonly regex_sentence="([[:alnum:][:punct:] ]*)"
readonly regex_date='([0-9]{4}-[0-1][0-9]-[0-3][0-9] [0-2][0-9]:[0-9]{2})'

# based on rfc2812, section 2.3.1
readonly regex_nick="([${regex_special}[:alnum:]][${regex_special}[:alnum:]-]*)"
readonly regex_chanstring=$'([^ ,:]*)'
readonly regex_channelid=$'([\x41-\x5A[:digit:]]{5}|[[:alnum:]]{5})'
readonly regex_channel="(([#+&]|!${regex_channelid})${regex_chanstring}(:${regex_chanstring})?)"
readonly regex_ip4addr="([[:digit:]]{1,3}(\.[[:digit:]]{1,3}){3})"
readonly regex_ip6addr="(([[:xdigit:]]{1,4}|:)(:[[:xdigit:]]{1,4}|:){1,7})"
readonly regex_shortname="([[:alnum:]._-]*)"
readonly regex_hostname="(${regex_shortname}(\.${regex_shortname})*(/${regex_shortname})*)"
readonly regex_hostaddr="(${regex_ipv4addr}|${regex_ip6addr})"
readonly regex_host="(${regex_hostname}|${regex_hostaddr})"

readonly regex_id="(${regex_shortname}@${regex_host})"


function regex_status_change {
	local status=${1}

	echo "^${regex_date} -!- ${regex_nick}(\(~?${regex_id}\))? ${status}$"
}

readonly regex_join=$(regex_status_change "has joined ${regex_channel}")
readonly regex_part=$(regex_status_change "has left ${regex_channel}")
readonly regex_quit=$(regex_status_change "has quit \"${regex_sentence}\"")
readonly regex_chnick=$(regex_status_change "changed nick to ${regex_nick}")


declare -A path=(
	["prefix"]="${HOME}/.si"
	["si-home"]="${SI_HOME}"
	["config"]="${HOME}/.config/si/config"
	["vimrc"]="${path[si-home]}/default.vimrc"
)


### connection settings

declare -A server=(
	["freenode"]="irc.freenode.net"
	["oftc"]="irc.oftc.net"
)

declare -A nick=(
	["freenode"]="si_$RANDOM"
	["oftc"]="si_$RANDOM"
)

declare -A password=(
	["freenode"]="password_example"
)

declare -A connecthook=(
	["freenode"]="connecthook_example"
)

declare -A channels=(
	["freenode"]="
		#si"
	["oftc"]="
		#ii 
		#suckless"
)

declare -A timeout=(
	[nick-registration]=30
)


### ui settings

# note: parameter expansion is performed at runtime,
#       regex must be single-quoted
declare -a color=(
	# regex           ansi 8-bit color code
	'^${regex_date}'  234
	'<?${nick}>?'     39
	'<${regex_nick}>' 173
)

# note: parameter expansion is performed at runtime,
#       regex must be single-quoted
declare -a ignores=(
	'${regex_join}'
	'${regex_part}'
	'${regex_quit}'
	'${regex_chnick}'
)

declare -A size=(
	[input-pane]=2
	[output-buffer]=512
)

declare -A format=(
	[window-name-prefix]="si:"
	[window-name-separator]=","
)

### network connect hooks

function connecthook_example {
	# post-connect setup goes here
	return
}

function password_example {
	echo "password for nick on network"
}


# vim: set filetype=sh :
